# git
alias removebranches="git branch | grep -w "master\|develop" | xargs git branch -D"
alias todev="git checkout develop && git fetch && git pull origin develop"
alias stash="git stash --include-untracked"
alias stasha="git stash apply"

# servers
# ...

# ni
# alias dev="nr dev"
alias dev="bun run dev"
# alias start="nr start"
alias start="bun run start"
# alias server="nr server"
alias server="bun run server"
# alias build="nr build"
alias build="bun run build"
alias nid='ni -D "$1"'
alias nu='nun "$1"'
alias ci="nci"

# npx
# alias nup="npx npm-upgrade@latest"
alias nup="npx taze@latest -Iwi"
alias nupg="npx taze@latest -Iwig"
alias nupm="npx taze@latest -Iwir"

# pnpm
alias pup="pnpm add -g pnpm" # update pnpm to the latest version

# misc
alias p3000="lsof -t -i :3000"
# alias config="code /Users/sandervispoel/Documents/personal/dotfiles/.extra"
alias hosts="/etc/hosts"


# Easier navigation: .., ..., ~ and -
alias ..="cd .."
alias cd..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# rm
alias rmrf='rm -rf'

# moving around quickly
alias p='cd ~/Documents/personal'
alias w='cd ~/Documents/work'

# misc
alias chmox='chmod -x'
alias brwe=brew  # typos 🤪
alias hosts='sudo $EDITOR /etc/hosts'
alias ag='ag -f --hidden'
alias sb='source ~/.bash_profile'
alias ll='ls -1a'
alias pg='echo "pinging Google...\n" && ping google.com'

# VSCode
alias c='code .'
alias prettierconfig="
    mkdir -p .vscode;
    cd .vscode;
    touch extensions.json settings.json;
    echo $'{\n  \"recommendations\": [\"esbenp.prettier-vscode\"]\n}' > extensions.json;
    echo $'{\n  \"editor.formatOnSave\": true,\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n}' > settings.json;
    cd ..;
"
alias pc='prettierconfig'

# functions
# mkdir and cd into it
function mcd() {
    mkdir -p "$@" && cd "$_"; # @copilot
}

# kill port
kp() {
    # install kill-port globally if not already installed
    if ! npm list -g | grep -q kill-port; then
        npm install -g kill-port
    fi

    # kill given port
    kill-port "$@"
}

###
# time to upgrade `ls`

# use coreutils `ls` if possible…
hash gls >/dev/null 2>&1 || alias gls="ls"

# always use color, even when piping (to awk,grep,etc)
if gls --color > /dev/null 2>&1; then colorflag="--color"; else colorflag="-G"; fi;
# colorflag="-G"
export CLICOLOR_FORCE=1

# ls options: A = include hidden (but not . or ..), F = put `/` after folders, h = byte unit suffixes
# alias ls='gls -AFh ${colorflag} --group-directories-first'
alias lsd='ls -l | grep "^d"' # only directories
#    `la` defined in .functions
###



###
# GIT STUFF

function clone() {
    git clone --depth=1 $1
    cd $(basename ${1%.*})
    yarn install
}
alias push="git push"

# Undo a `git push`
alias undopush="git push -f origin HEAD^:master"

# git root
alias gr='[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`'
alias master="git checkout main 2>/dev/null || git checkout master"

# Networking. IP address, dig, DNS
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
# alias dig="dig +nocmd any +multiline +noall +answer"
# wget sucks with certificates. Let's keep it simple.
alias wget="curl -O"

# Recursively delete `.DS_Store` files
alias cleanup_dsstore="find . -name '*.DS_Store' -type f -ls -delete"

alias diskspace_report="df -P -kHl"
alias free_diskspace_report="diskspace_report"

# Shortcuts
alias g="git"
alias v="vim"
alias ungz="gunzip -k"

# File size
alias fs="stat -f \"%z bytes\""

# Empty the Trash on all mounted volumes and the main HDD. then clear the useless sleepimage
alias emptytrash=" \
    sudo rm -rfv /Volumes/*/.Trashes; \
    rm -rfv ~/.Trash/*; \
    sudo rm -v /private/var/vm/sleepimage; \
    rm -rv \"/Users/paulirish/Library/Application Support/stremio/Cache\";  \
    rm -rv \"/Users/paulirish/Library/Application Support/stremio/stremio-cache\" \
"

# Update installed Ruby gems, Homebrew, npm, and their installed packages
alias brew_update="brew -v update; brew upgrade --force-bottle --cleanup; brew cleanup; brew cask cleanup; brew prune; brew doctor; npm-check -g -u"
alias update_brew_npm_gem='brew_update; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update --no-document'

# Initialize Prettier configuration and dependencies
function init-prettier() {
    echo "🚀 Initializing Prettier configuration..."
    
    # Download prettier config
    curl -L -o prettier.config.js https://gist.github.com/sandervspl/e8bb49a5c738eff6c66f4edc2254d195/raw/77888f3c3586d5a5572a1ef7b41258b91c033eda/prettier.config.js
    
    # Fetch dependencies and convert newlines to spaces
    DEPS=$(curl -L -s https://gist.github.com/sandervspl/e8bb49a5c738eff6c66f4edc2254d195/raw/77888f3c3586d5a5572a1ef7b41258b91c033eda/dependencies | tr '\n' ' ')
    
    # Determine package manager
    if [ -f "bun.lockb" ]; then
        echo "📦 Using bun as package manager"
        bun add -d $DEPS
    elif [ -f "pnpm-lock.yaml" ]; then
        echo "📦 Using pnpm as package manager"
        pnpm add -D $DEPS
    elif [ -f "package-lock.json" ]; then
        echo "📦 Using npm as package manager"
        npm install -D $DEPS
    elif [ -f "yarn.lock" ]; then
        echo "📦 Using yarn as package manager"
        yarn add -D $DEPS
    else
        echo "⚠️ No lockfile found. Using npm as default package manager"
        npm install -D $DEPS
    fi
    
    # Check if file has scripts section
    if grep -q '"scripts"' package.json; then
        # Use tmp file to handle the edit
        TMP_FILE=$(mktemp)
        jq '.scripts += {"prettier": "prettier --config prettier.config.js --write '\''**/*.{json,js,ts,tsx}'\''"}' package.json > "$TMP_FILE"
        mv "$TMP_FILE" package.json
    else
        # Add scripts section if it doesn't exist
        TMP_FILE=$(mktemp)
        jq '. += {"scripts": {"prettier": "prettier --config prettier.config.js --write '\''**/*.{json,js,ts,tsx}'\''"}}' package.json > "$TMP_FILE"
        mv "$TMP_FILE" package.json
    fi

    # Create VSCode settings
    mkdir -p .vscode
    echo '{
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode"
}' > .vscode/settings.json
    
    echo '{
  "recommendations": ["esbenp.prettier-vscode"]
}' > .vscode/extensions.json
    
    echo "✅ Prettier configuration complete!"
}

